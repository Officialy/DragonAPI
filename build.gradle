buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

/*plugins { 1.19
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+' apply false
}*/

version = '0.0.1a'
group = 'reika.dragonapi' // http://maven.apache.org/guides/mini/guide-naming-conventions.html cough cough reika
archivesBaseName = 'DragonAPI'

// Mojang ships Java 16 to end users in 1.17+ instead of Java 8 in 1.16 or lower, so your mod should target Java 16.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "JEI"
        url "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.84'

//    implementation fg.deobf("curse.maven:flux-248020:4095070")
//    implementation fg.deobf("curse.maven:spark-361579:4057111")
//    implementation fg.deobf("curse.maven:stripper-250603:3921630")
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "dragonapi",
                "Specification-Vendor"    : "reika, officialy",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "reika, officialy",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    rename 'mixin.refmap.json', "dragonapi.mixin-refmap.json"
}